import io
from aiogram import Router, F
from aiogram.types import Message, BufferedInputFile
from aiogram.filters import CommandStart

from src.services import openai_service

router = Router()

@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É.")

@router.message(F.voice)
async def voice_message_handler(message: Message) -> None:

    await message.answer("–ü—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ —Ç–µ–∫—Å—Çüßê")

    voice_file_id = message.voice.file_id
    file_info = await message.bot.get_file(voice_file_id)
    file_path = file_info.file_path

    voice_bytes_io = await message.bot.download_file(file_path)

    user_text = await openai_service.voice_to_text(voice_bytes_io)

    if not user_text or "–æ—à–∏–±–∫–∞" in user_text:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return

    await message.answer(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: ¬´{user_text}¬ª\n\n–ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...")

    ai_response_text = await openai_service.get_assistant_response(user_text)

    ai_response_voice = await openai_service.text_to_voice(ai_response_text)

    if not ai_response_voice:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç. –í–æ—Ç —Ç–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:\n\n" + ai_response_text)
        return

    voice_to_send = BufferedInputFile(ai_response_voice, filename="response.ogg")
    await message.answer_voice(voice_to_send)

@router.message()
async def other_messages_handler(message: Message):

    await message.answer("–Ø —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–æ–π—Å.")